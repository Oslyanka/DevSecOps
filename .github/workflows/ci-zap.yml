name: CI - OWASP ZAP

on:
  push:
  pull_request:

jobs:
  zap_scan:
    name: ZAP Full Scan
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies (with fallback)
        working-directory: app
        run: |
          npm ci || npm install

      - name: Start app (localhost:8080) and wait
        working-directory: app
        run: |
          nohup npm start >/tmp/app.log 2>&1 &
          npx wait-on http://127.0.0.1:8080

      - name: Show last app logs (tail)
        if: always()
        run: tail -n 200 /tmp/app.log || true

      - name: Prepare reports folder
        run: mkdir -p zap-reports

      # No Linux do GitHub Actions o --network=host funciona;
      # o alvo Ã© a app local que subimos acima.
      - name: Run OWASP ZAP full scan (Docker)
        run: |
          docker run --rm --network=host \
            -v "${{ github.workspace }}/zap-reports":/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-full-scan.py \
              -t http://127.0.0.1:8080 \
              -r zap-report.html \
              -J zap-report.json \
              -w zap-report.md \
              -I

      - name: List generated reports
        if: always()
        run: ls -la zap-reports || true

      - name: Analyze ZAP JSON and fail on High/Critical
        run: |
          python3 scripts/parse_zap_report.py zap-reports/zap-report.json

      - name: Upload ZAP artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-reports
          path: zap-reports/**
          if-no-files-found: warn
          retention-days: 7
